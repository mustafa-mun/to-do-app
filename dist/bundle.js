(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(537),o=n.n(a),r=n(645),i=n.n(r),d=n(667),c=n.n(d),s=new URL(n(58),n.b),l=i()(o()),u=c()(s);l.push([e.id,'@font-face{font-family:"Roboto";src:url('+u+') format("truetype");font-weight:400;font-style:normal}body{padding:0;margin:0;box-sizing:border-box;display:flex;flex-direction:column}p{font-family:Roboto;color:#391145;margin:0}a{transition:all 0.15s}a:hover{text-decoration:none}header{display:flex;align-items:center;justify-content:space-between;width:100%;height:12vh;border:none;background-color:#85ffbd;background-image:linear-gradient(45deg, #85ffbd 0%, #fff 100%)}header .header-left{display:flex;align-items:center}header .header-left p{margin-left:20px;font-size:22px;white-space:nowrap}header .header-left #logo{width:80px;margin-left:50px}header p{margin-right:50px}.details-modal{display:flex;align-items:center;justify-content:center;position:absolute;top:0;bottom:0;right:0;left:0;background-color:rgba(0,0,0,0.2)}.details-modal .details-container{display:flex;gap:25px;flex-direction:column;padding:25px;border-radius:8px;box-shadow:0 0 10px rgba(0,0,0,0.4);background-color:white}.details-modal .details-container #close-details-btn{color:white;background-color:#ff2424;font-weight:bold;border:none;height:30px;border-radius:10px;cursor:pointer}.details-modal .details-container .details-section{display:flex;align-items:center;gap:15px}.details-modal .details-container .details-section .details-label{font-weight:bold;border-bottom:solid black 1px}.details-modal .details-container .details-section .details-priority{width:10px;height:10px;background-color:green;border-radius:20px}main{display:flex;height:88vh;box-sizing:border-box}main .modal{display:flex;justify-content:center;align-items:center;position:absolute;top:0;bottom:0;left:0;right:0;background-color:rgba(0,0,0,0.1)}main .modal form{display:flex;padding:35px;flex-direction:column;background:white;height:400px;width:275px;border-radius:12px;gap:35px}main .modal form select{padding-left:5px;height:29px;cursor:pointer}main .modal form input{height:15px;padding:5px}main .modal form div{display:flex;flex-direction:column;gap:6px}main .modal form .buttons-container{gap:25px;flex-direction:row;margin-top:25px}main .modal form .buttons-container button{width:50%;height:35px;border:none;color:white;border-radius:6px;font-weight:bold;cursor:pointer;transition:all 0.15s}main .modal form .buttons-container button:hover{box-shadow:0px 0px 10px rgba(0,0,0,0.4);opacity:0.8}main .modal form .buttons-container #submit-task-btn{background-color:green}main .modal form .buttons-container #close-modal-btn{background-color:red}main .visible{visibility:visible}main aside{display:flex;flex-direction:column;align-items:center;box-shadow:0 0 6px #5dee9e;width:20vw;min-width:100px;padding:40px}main aside .edit-project{display:flex;gap:20px}main aside .edit-project button{width:50%;height:35px;border-radius:7px;border:none;cursor:pointer;color:white;font-weight:bold}main aside .edit-project button:hover{opacity:0.8;box-shadow:0px 0px 10px rgba(0,0,0,0.4)}main aside .edit-project #delete-project-btn{background-color:red}main aside .edit-project #rename-project-btn{background:#27a8d3}main aside .add-project{font-size:19px;cursor:pointer;transition:all 0.2s}main aside .add-project:hover{font-size:21px;opacity:0.8}main aside .projects-section{display:grid;row-gap:35px;width:100%;grid-template-columns:1fr;margin-top:30px}main aside .projects-section .project-name-input-container input{border-radius:4px;border:solid black 1px;height:25px;width:100%}main aside .projects-section .project-name-input-container .input-btns-container{display:flex;gap:25px;margin-top:12px;margin-left:2.5px;height:30px;width:100%}main aside .projects-section .project-name-input-container .input-btns-container button{width:50%;border-radius:7px;border:none;font-weight:bold;color:white;cursor:pointer;transition:all 0.2s}main aside .projects-section .project-name-input-container .input-btns-container button:hover{opacity:0.8;box-shadow:0px 0px 10px rgba(0,0,0,0.4)}main aside .projects-section .project-name-input-container .input-btns-container #add-project-btn{background-color:green}main aside .projects-section .project-name-input-container .input-btns-container #close-project-input-btn{background-color:red}main aside .projects-section .projects{display:flex;flex-direction:column;justify-content:space-between;border:solid #391145 1px;padding:15px;font-size:15px;border-radius:4px;cursor:pointer;border-radius:13px;transition:all 0.15s}main aside .projects-section .projects .edit-project-input-container{margin-top:12px;display:flex;align-items:center}main aside .projects-section .projects .edit-project-input-container .edit-project-icons-container{display:flex;gap:20px}main aside .projects-section .projects .edit-project-input-container .edit-project-icons-container .edit-project-icon{width:20px}main aside .projects-section .projects .edit-project-input-container input{width:80%;border:none;height:30px;background-color:#f8fdfd}main aside .projects-section .projects .edit-project-input-container input:focus{outline:none}main aside .projects-section .projects .projects-project-container{display:flex;justify-content:space-between}main aside .projects-section .projects .projects-button-container{display:flex;gap:30px}main aside .projects-section .projects .projects-button-container button{margin-top:14px;width:50%;height:36px;border-radius:8px;color:white;font-weight:bold;border:none;transition:all 0.2s;cursor:pointer}main aside .projects-section .projects .projects-button-container button:hover{opacity:0.8;box-shadow:0px 0px 10px rgba(0,0,0,0.4)}main aside .projects-section .projects .projects-button-container #project-edit-btn{background-color:#098bc7}main aside .projects-section .projects .projects-button-container #project-delete-btn{background-color:red}main aside .projects-section .projects .three-dots{width:20px}main aside .projects-section .projects:hover{box-shadow:0px 0px 10px rgba(0,0,0,0.2)}main #tasks-section{display:flex;flex-direction:column;align-items:center;width:100%;margin-top:75px}main #tasks-section .task-section-container{display:flex;padding:40px;border-radius:35px;background:#fffefe;box-shadow:0px 0px 20px rgba(0,0,0,0.2);flex-direction:column;align-items:center}main #tasks-section .task-right-container{display:flex;align-items:center;gap:20px}main #tasks-section .task-right-container .task-icon{width:20px;cursor:pointer}main #tasks-section #project-name{font-size:29px;margin-bottom:25px;white-space:nowrap;align-self:flex-start}main #tasks-section #add-task{cursor:pointer;transition:all 0.2s;font-size:18px}main #tasks-section #add-task:hover{opacity:0.8;font-size:22px}main #tasks-section .tasks{display:flex;flex-direction:column;width:50vw;grid-template-columns:50vw;row-gap:35px;margin-top:50px}main #tasks-section .tasks .task{display:flex;justify-content:space-between;align-items:center;padding:12px;border:solid black 1px;border-radius:7px}main #tasks-section .tasks .task .task-details-btn{border:none;color:white;background-color:#0baf57;font-weight:bold;padding:8px 16px;border-radius:12px;cursor:pointer}main #tasks-section .tasks .task .task-details-btn:hover{box-shadow:0px 0px 10px #76ee71;opacity:0.9}main #tasks-section .tasks .task .task-left-container{display:flex;align-items:center;height:25px}main #tasks-section .tasks .task .task-left-container .priority{width:10px;background-color:red;height:100%}main #tasks-section .tasks .task .task-left-container .check{width:10px;height:40%;border:solid black 1px;margin-left:15px;border-radius:999px;cursor:pointer}main #tasks-section .tasks .task .task-left-container .title-container{margin-left:25px}main #tasks-section .tasks .task .three-dots{width:20px;cursor:pointer}main #tasks-section .tasks .task:hover{box-shadow:0px 0px 10px rgba(0,0,0,0.2)}main #delete-tasks{width:20%;height:40px;border-radius:12px;border:none;background-color:#0baf57;color:white;font-weight:bold;margin-top:30px;font-size:11px;cursor:pointer;transition:all 0.2s;align-self:flex-start}main #delete-tasks:hover{box-shadow:0px 0px 10px #76ee71;opacity:0.9}.todo-img{width:325px;position:absolute;bottom:0;right:0}\n',"",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"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",sourcesContent:['$base-color: #5dee9e;\n@font-face {\n  font-family: "Roboto";\n  src: url("./assets/roboto.ttf") format("truetype");\n  font-weight: 400;\n  font-style: normal;\n}\n\nbody {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n}\np {\n  font-family: Roboto;\n  color: #391145;\n  margin: 0;\n}\n\na {\n  transition: all 0.15s;\n}\n\na:hover {\n  text-decoration: none;\n}\n\nheader {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  height: 12vh;\n  border: none;\n  background-color: #85ffbd;\n  background-image: linear-gradient(45deg, #85ffbd 0%, #ffffff 100%);\n\n  .header-left {\n    display: flex;\n    align-items: center;\n    p {\n      margin-left: 20px;\n      font-size: 22px;\n      white-space: nowrap;\n    }\n    #logo {\n      width: 80px;\n      margin-left: 50px;\n    }\n  }\n\n  p {\n    margin-right: 50px;\n  }\n}\n\n.details-modal {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n\n  .details-container {\n    display: flex;\n    gap: 25px;\n    flex-direction: column;\n    padding: 25px;\n    border-radius: 8px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.4);\n    background-color: white;\n\n    #close-details-btn {\n      color: white;\n      background-color: rgb(255, 36, 36);\n      font-weight: bold;\n      border: none;\n      height: 30px;\n      border-radius: 10px;\n      cursor: pointer;\n    }\n\n    .details-section {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n      .details-label {\n        font-weight: bold;\n        border-bottom: solid black 1px;\n      }\n      .details-priority {\n        width: 10px;\n        height: 10px;\n        background-color: green;\n        border-radius: 20px;\n      }\n    }\n  }\n}\n\nmain {\n  display: flex;\n  height: 88vh;\n  box-sizing: border-box;\n\n  .modal {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background-color: rgba(0, 0, 0, 0.1);\n\n    form {\n      display: flex;\n      padding: 35px;\n      flex-direction: column;\n      background: white;\n      height: 400px;\n      width: 275px;\n      border-radius: 12px;\n      gap: 35px;\n\n      select {\n        padding-left: 5px;\n        height: 29px;\n        cursor: pointer;\n      }\n\n      input {\n        height: 15px;\n        padding: 5px;\n      }\n\n      div {\n        display: flex;\n        flex-direction: column;\n        gap: 6px;\n      }\n      .buttons-container {\n        gap: 25px;\n        flex-direction: row;\n        margin-top: 25px;\n\n        button {\n          width: 50%;\n          height: 35px;\n          border: none;\n          color: white;\n          border-radius: 6px;\n          font-weight: bold;\n          cursor: pointer;\n          transition: all 0.15s;\n        }\n        button:hover {\n          box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);\n          opacity: 0.8;\n        }\n        #submit-task-btn {\n          background-color: green;\n        }\n        #close-modal-btn {\n          background-color: red;\n        }\n      }\n    }\n  }\n\n  .visible {\n    visibility: visible;\n  }\n\n  aside {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    box-shadow: 0 0 6px $base-color;\n    width: 20vw;\n    min-width: 100px;\n    padding: 40px;\n\n    .edit-project {\n      display: flex;\n      gap: 20px;\n      button {\n        width: 50%;\n        height: 35px;\n        border-radius: 7px;\n        border: none;\n        cursor: pointer;\n        color: white;\n        font-weight: bold;\n      }\n      button:hover {\n        opacity: 0.8;\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);\n      }\n      #delete-project-btn {\n        background-color: red;\n      }\n      #rename-project-btn {\n        background: rgb(39, 168, 211);\n      }\n    }\n\n    .add-project {\n      font-size: 19px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .add-project:hover {\n      font-size: 21px;\n      opacity: 0.8;\n    }\n\n    .projects-section {\n      display: grid;\n      row-gap: 35px;\n      width: 100%;\n      grid-template-columns: 1fr;\n      margin-top: 30px;\n\n      .project-name-input-container {\n        input {\n          border-radius: 4px;\n          border: solid black 1px;\n          height: 25px;\n          width: 100%;\n        }\n        .input-btns-container {\n          display: flex;\n          gap: 25px;\n          margin-top: 12px;\n          margin-left: 2.5px;\n          height: 30px;\n          width: 100%;\n          button {\n            width: 50%;\n            border-radius: 7px;\n            border: none;\n            font-weight: bold;\n            color: white;\n            cursor: pointer;\n            transition: all 0.2s;\n          }\n          button:hover {\n            opacity: 0.8;\n            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);\n          }\n          #add-project-btn {\n            background-color: green;\n          }\n          #close-project-input-btn {\n            background-color: red;\n          }\n        }\n      }\n\n      .projects {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        border: solid #391145 1px;\n        padding: 15px;\n        font-size: 15px;\n        border-radius: 4px;\n        cursor: pointer;\n        border-radius: 13px;\n        transition: all 0.15s;\n\n        .edit-project-input-container {\n          margin-top: 12px;\n          display: flex;\n          align-items: center;\n\n          .edit-project-icons-container {\n            display: flex;\n            gap: 20px;\n            .edit-project-icon {\n              width: 20px;\n            }\n          }\n          input {\n            width: 80%;\n            border: none;\n            height: 30px;\n            background-color: rgb(248, 253, 253);\n          }\n          input:focus {\n            outline: none;\n          }\n        }\n\n        .projects-project-container {\n          display: flex;\n          justify-content: space-between;\n        }\n\n        .projects-button-container {\n          display: flex;\n          gap: 30px;\n          button {\n            margin-top: 14px;\n            width: 50%;\n            height: 36px;\n            border-radius: 8px;\n            color: white;\n            font-weight: bold;\n            border: none;\n            transition: all 0.2s;\n            cursor: pointer;\n          }\n\n          button:hover {\n            opacity: 0.8;\n            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.4);\n          }\n\n          #project-edit-btn {\n            background-color: #098bc7;\n          }\n          #project-delete-btn {\n            background-color: red;\n          }\n        }\n\n        .three-dots {\n          width: 20px;\n        }\n      }\n      .projects:hover {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n      }\n    }\n  }\n\n  #tasks-section {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    margin-top: 75px;\n\n    .task-section-container {\n      display: flex;\n      padding: 40px;\n      border-radius: 35px;\n      background: #fffefe;\n      box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);\n      flex-direction: column;\n      align-items: center;\n    }\n\n    .task-right-container {\n      display: flex;\n      align-items: center;\n      gap: 20px;\n      .task-icon {\n        width: 20px;\n        cursor: pointer;\n      }\n    }\n\n    #project-name {\n      font-size: 29px;\n      margin-bottom: 25px;\n      white-space: nowrap;\n      align-self: flex-start;\n    }\n    #add-task {\n      cursor: pointer;\n      transition: all 0.2s;\n      font-size: 18px;\n    }\n    #add-task:hover {\n      opacity: 0.8;\n      font-size: 22px;\n    }\n\n    .tasks {\n      display: flex;\n      flex-direction: column;\n      width: 50vw;\n      grid-template-columns: 50vw;\n      row-gap: 35px;\n      margin-top: 50px;\n\n      .task {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 12px;\n        border: solid black 1px;\n        border-radius: 7px;\n\n        .task-details-btn {\n          border: none;\n          color: white;\n          background-color: #0baf57;\n          font-weight: bold;\n          padding: 8px 16px;\n          border-radius: 12px;\n          cursor: pointer;\n        }\n        .task-details-btn:hover {\n          box-shadow: 0px 0px 10px #76ee71;\n          opacity: 0.9;\n        }\n\n        .task-left-container {\n          display: flex;\n          align-items: center;\n          height: 25px;\n\n          .priority {\n            width: 10px;\n            background-color: red;\n            height: 100%;\n          }\n          .check {\n            width: 10px;\n            height: 40%;\n            border: solid black 1px;\n            margin-left: 15px;\n            border-radius: 999px;\n            cursor: pointer;\n          }\n          .title-container {\n            margin-left: 25px;\n          }\n        }\n        .three-dots {\n          width: 20px;\n          cursor: pointer;\n        }\n      }\n      .task:hover {\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);\n      }\n    }\n  }\n  #delete-tasks {\n    width: 20%;\n    height: 40px;\n    border-radius: 12px;\n    border: none;\n    background-color: #0baf57;\n    color: white;\n    font-weight: bold;\n    margin-top: 30px;\n    font-size: 11px;\n    cursor: pointer;\n    transition: all 0.2s;\n    align-self: flex-start;\n  }\n  #delete-tasks:hover {\n    box-shadow: 0px 0px 10px #76ee71;\n    opacity: 0.9;\n  }\n}\n\n.todo-img {\n  width: 325px;\n  position: absolute;\n  bottom: 0;\n  right: 0;\n}\n'],sourceRoot:""}]);const p=l},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,o,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(i[c]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);a&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */");return[t].concat([r]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var r={},i=[],d=0;d<e.length;d++){var c=e[d],s=a.base?c[0]+a.base:c[0],l=r[s]||0,u="".concat(s," ").concat(l);r[s]=l+1;var p=n(u),m={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=o(m,a);a.byIndex=d,t.splice(d,0,{identifier:u,updater:A,references:1})}i.push(u)}return i}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var r=a(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var d=n(r[i]);t[d].references--}for(var c=a(e,o),s=0;s<r.length;s++){var l=n(r[s]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}r=c}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,o&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var r=n.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},58:(e,t,n)=>{e.exports=n.p+"fc2b5060f7accec5cf74.ttf"}},t={};function n(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={id:a,exports:{}};return e[a](r,r.exports,n),r.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),a=n(795),o=n.n(a),r=n(569),i=n.n(r),d=n(565),c=n.n(d),s=n(216),l=n.n(s),u=n(589),p=n.n(u),m=n(192),A={};A.styleTagTransform=p(),A.setAttributes=c(),A.insert=i().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=l(),t()(m.Z,A),m.Z&&m.Z.locals&&m.Z.locals;var C,h=document.getElementById("projects-section"),f=document.getElementById("add-project"),g=document.getElementById("tasks-section"),b={projects:C=[],addProject:function(e){C.push(e)}},v=document.querySelector("main"),x=JSON.parse(localStorage.getItem("projects"));function B(e,t){var n=t.indexOf(e);t.splice(n,1)}function y(e){localStorage.setItem("projects",JSON.stringify(e))}function w(e,t,n){var a=t.findIndex((function(t){return t.id===e.id}));t.splice(a,1,n)}document.getElementById("modal"),document.querySelector("form"),document.getElementById("title"),document.getElementById("description"),document.getElementById("date"),document.getElementById("priority");const k=n.p+"f587c2b8be786d80be09.png";function E(e,t){var n=document.createElement("div");n.className="projects",n.id="project".concat(t);var a=document.createElement("div");a.className="projects-project-container";var o=document.createElement("p");o.textContent=e,o.id="project-name".concat(t);var r=document.createElement("img");return r.src=k,r.className="three-dots",r.alt="three-dot",r.id="three-dot".concat(t),a.appendChild(o),a.appendChild(r),n.appendChild(a),n}function j(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function T(e){return T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},T(e)}function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function Y(e){j(1,arguments);var t=Object.prototype.toString.call(e);return e instanceof Date||"object"===D(e)&&"[object Date]"===t?new Date(e.getTime()):"number"==typeof e||"[object Number]"===t?new Date(e):("string"!=typeof e&&"[object String]"!==t||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}function M(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}var S=864e5;function W(e){j(1,arguments);var t=Y(e),n=t.getUTCDay(),a=(n<1?7:0)+n-1;return t.setUTCDate(t.getUTCDate()-a),t.setUTCHours(0,0,0,0),t}function U(e){j(1,arguments);var t=Y(e),n=t.getUTCFullYear(),a=new Date(0);a.setUTCFullYear(n+1,0,4),a.setUTCHours(0,0,0,0);var o=W(a),r=new Date(0);r.setUTCFullYear(n,0,4),r.setUTCHours(0,0,0,0);var i=W(r);return t.getTime()>=o.getTime()?n+1:t.getTime()>=i.getTime()?n:n-1}var I=6048e5;var N={};function P(){return N}function q(e,t){var n,a,o,r,i,d,c,s;j(1,arguments);var l=P(),u=M(null!==(n=null!==(a=null!==(o=null!==(r=null==t?void 0:t.weekStartsOn)&&void 0!==r?r:null==t||null===(i=t.locale)||void 0===i||null===(d=i.options)||void 0===d?void 0:d.weekStartsOn)&&void 0!==o?o:l.weekStartsOn)&&void 0!==a?a:null===(c=l.locale)||void 0===c||null===(s=c.options)||void 0===s?void 0:s.weekStartsOn)&&void 0!==n?n:0);if(!(u>=0&&u<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var p=Y(e),m=p.getUTCDay(),A=(m<u?7:0)+m-u;return p.setUTCDate(p.getUTCDate()-A),p.setUTCHours(0,0,0,0),p}function O(e,t){var n,a,o,r,i,d,c,s;j(1,arguments);var l=Y(e),u=l.getUTCFullYear(),p=P(),m=M(null!==(n=null!==(a=null!==(o=null!==(r=null==t?void 0:t.firstWeekContainsDate)&&void 0!==r?r:null==t||null===(i=t.locale)||void 0===i||null===(d=i.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==o?o:p.firstWeekContainsDate)&&void 0!==a?a:null===(c=p.locale)||void 0===c||null===(s=c.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==n?n:1);if(!(m>=1&&m<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var A=new Date(0);A.setUTCFullYear(u+1,0,m),A.setUTCHours(0,0,0,0);var C=q(A,t),h=new Date(0);h.setUTCFullYear(u,0,m),h.setUTCHours(0,0,0,0);var f=q(h,t);return l.getTime()>=C.getTime()?u+1:l.getTime()>=f.getTime()?u:u-1}var L=6048e5;function Q(e,t){for(var n=e<0?"-":"",a=Math.abs(e).toString();a.length<t;)a="0"+a;return n+a}const z=function(e,t){var n=e.getUTCFullYear(),a=n>0?n:1-n;return Q("yy"===t?a%100:a,t.length)},Z=function(e,t){var n=e.getUTCMonth();return"M"===t?String(n+1):Q(n+1,2)},F=function(e,t){return Q(e.getUTCDate(),t.length)},H=function(e,t){return Q(e.getUTCHours()%12||12,t.length)},R=function(e,t){return Q(e.getUTCHours(),t.length)},G=function(e,t){return Q(e.getUTCMinutes(),t.length)},X=function(e,t){return Q(e.getUTCSeconds(),t.length)},J=function(e,t){var n=t.length,a=e.getUTCMilliseconds();return Q(Math.floor(a*Math.pow(10,n-3)),t.length)};var V={G:function(e,t,n){var a=e.getUTCFullYear()>0?1:0;switch(t){case"G":case"GG":case"GGG":return n.era(a,{width:"abbreviated"});case"GGGGG":return n.era(a,{width:"narrow"});default:return n.era(a,{width:"wide"})}},y:function(e,t,n){if("yo"===t){var a=e.getUTCFullYear(),o=a>0?a:1-a;return n.ordinalNumber(o,{unit:"year"})}return z(e,t)},Y:function(e,t,n,a){var o=O(e,a),r=o>0?o:1-o;return"YY"===t?Q(r%100,2):"Yo"===t?n.ordinalNumber(r,{unit:"year"}):Q(r,t.length)},R:function(e,t){return Q(U(e),t.length)},u:function(e,t){return Q(e.getUTCFullYear(),t.length)},Q:function(e,t,n){var a=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case"Q":return String(a);case"QQ":return Q(a,2);case"Qo":return n.ordinalNumber(a,{unit:"quarter"});case"QQQ":return n.quarter(a,{width:"abbreviated",context:"formatting"});case"QQQQQ":return n.quarter(a,{width:"narrow",context:"formatting"});default:return n.quarter(a,{width:"wide",context:"formatting"})}},q:function(e,t,n){var a=Math.ceil((e.getUTCMonth()+1)/3);switch(t){case"q":return String(a);case"qq":return Q(a,2);case"qo":return n.ordinalNumber(a,{unit:"quarter"});case"qqq":return n.quarter(a,{width:"abbreviated",context:"standalone"});case"qqqqq":return n.quarter(a,{width:"narrow",context:"standalone"});default:return n.quarter(a,{width:"wide",context:"standalone"})}},M:function(e,t,n){var a=e.getUTCMonth();switch(t){case"M":case"MM":return Z(e,t);case"Mo":return n.ordinalNumber(a+1,{unit:"month"});case"MMM":return n.month(a,{width:"abbreviated",context:"formatting"});case"MMMMM":return n.month(a,{width:"narrow",context:"formatting"});default:return n.month(a,{width:"wide",context:"formatting"})}},L:function(e,t,n){var a=e.getUTCMonth();switch(t){case"L":return String(a+1);case"LL":return Q(a+1,2);case"Lo":return n.ordinalNumber(a+1,{unit:"month"});case"LLL":return n.month(a,{width:"abbreviated",context:"standalone"});case"LLLLL":return n.month(a,{width:"narrow",context:"standalone"});default:return n.month(a,{width:"wide",context:"standalone"})}},w:function(e,t,n,a){var o=function(e,t){j(1,arguments);var n=Y(e),a=q(n,t).getTime()-function(e,t){var n,a,o,r,i,d,c,s;j(1,arguments);var l=P(),u=M(null!==(n=null!==(a=null!==(o=null!==(r=null==t?void 0:t.firstWeekContainsDate)&&void 0!==r?r:null==t||null===(i=t.locale)||void 0===i||null===(d=i.options)||void 0===d?void 0:d.firstWeekContainsDate)&&void 0!==o?o:l.firstWeekContainsDate)&&void 0!==a?a:null===(c=l.locale)||void 0===c||null===(s=c.options)||void 0===s?void 0:s.firstWeekContainsDate)&&void 0!==n?n:1),p=O(e,t),m=new Date(0);return m.setUTCFullYear(p,0,u),m.setUTCHours(0,0,0,0),q(m,t)}(n,t).getTime();return Math.round(a/L)+1}(e,a);return"wo"===t?n.ordinalNumber(o,{unit:"week"}):Q(o,t.length)},I:function(e,t,n){var a=function(e){j(1,arguments);var t=Y(e),n=W(t).getTime()-function(e){j(1,arguments);var t=U(e),n=new Date(0);return n.setUTCFullYear(t,0,4),n.setUTCHours(0,0,0,0),W(n)}(t).getTime();return Math.round(n/I)+1}(e);return"Io"===t?n.ordinalNumber(a,{unit:"week"}):Q(a,t.length)},d:function(e,t,n){return"do"===t?n.ordinalNumber(e.getUTCDate(),{unit:"date"}):F(e,t)},D:function(e,t,n){var a=function(e){j(1,arguments);var t=Y(e),n=t.getTime();t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0);var a=n-t.getTime();return Math.floor(a/S)+1}(e);return"Do"===t?n.ordinalNumber(a,{unit:"dayOfYear"}):Q(a,t.length)},E:function(e,t,n){var a=e.getUTCDay();switch(t){case"E":case"EE":case"EEE":return n.day(a,{width:"abbreviated",context:"formatting"});case"EEEEE":return n.day(a,{width:"narrow",context:"formatting"});case"EEEEEE":return n.day(a,{width:"short",context:"formatting"});default:return n.day(a,{width:"wide",context:"formatting"})}},e:function(e,t,n,a){var o=e.getUTCDay(),r=(o-a.weekStartsOn+8)%7||7;switch(t){case"e":return String(r);case"ee":return Q(r,2);case"eo":return n.ordinalNumber(r,{unit:"day"});case"eee":return n.day(o,{width:"abbreviated",context:"formatting"});case"eeeee":return n.day(o,{width:"narrow",context:"formatting"});case"eeeeee":return n.day(o,{width:"short",context:"formatting"});default:return n.day(o,{width:"wide",context:"formatting"})}},c:function(e,t,n,a){var o=e.getUTCDay(),r=(o-a.weekStartsOn+8)%7||7;switch(t){case"c":return String(r);case"cc":return Q(r,t.length);case"co":return n.ordinalNumber(r,{unit:"day"});case"ccc":return n.day(o,{width:"abbreviated",context:"standalone"});case"ccccc":return n.day(o,{width:"narrow",context:"standalone"});case"cccccc":return n.day(o,{width:"short",context:"standalone"});default:return n.day(o,{width:"wide",context:"standalone"})}},i:function(e,t,n){var a=e.getUTCDay(),o=0===a?7:a;switch(t){case"i":return String(o);case"ii":return Q(o,t.length);case"io":return n.ordinalNumber(o,{unit:"day"});case"iii":return n.day(a,{width:"abbreviated",context:"formatting"});case"iiiii":return n.day(a,{width:"narrow",context:"formatting"});case"iiiiii":return n.day(a,{width:"short",context:"formatting"});default:return n.day(a,{width:"wide",context:"formatting"})}},a:function(e,t,n){var a=e.getUTCHours()/12>=1?"pm":"am";switch(t){case"a":case"aa":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"});case"aaa":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"}).toLowerCase();case"aaaaa":return n.dayPeriod(a,{width:"narrow",context:"formatting"});default:return n.dayPeriod(a,{width:"wide",context:"formatting"})}},b:function(e,t,n){var a,o=e.getUTCHours();switch(a=12===o?"noon":0===o?"midnight":o/12>=1?"pm":"am",t){case"b":case"bb":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"});case"bbb":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"}).toLowerCase();case"bbbbb":return n.dayPeriod(a,{width:"narrow",context:"formatting"});default:return n.dayPeriod(a,{width:"wide",context:"formatting"})}},B:function(e,t,n){var a,o=e.getUTCHours();switch(a=o>=17?"evening":o>=12?"afternoon":o>=4?"morning":"night",t){case"B":case"BB":case"BBB":return n.dayPeriod(a,{width:"abbreviated",context:"formatting"});case"BBBBB":return n.dayPeriod(a,{width:"narrow",context:"formatting"});default:return n.dayPeriod(a,{width:"wide",context:"formatting"})}},h:function(e,t,n){if("ho"===t){var a=e.getUTCHours()%12;return 0===a&&(a=12),n.ordinalNumber(a,{unit:"hour"})}return H(e,t)},H:function(e,t,n){return"Ho"===t?n.ordinalNumber(e.getUTCHours(),{unit:"hour"}):R(e,t)},K:function(e,t,n){var a=e.getUTCHours()%12;return"Ko"===t?n.ordinalNumber(a,{unit:"hour"}):Q(a,t.length)},k:function(e,t,n){var a=e.getUTCHours();return 0===a&&(a=24),"ko"===t?n.ordinalNumber(a,{unit:"hour"}):Q(a,t.length)},m:function(e,t,n){return"mo"===t?n.ordinalNumber(e.getUTCMinutes(),{unit:"minute"}):G(e,t)},s:function(e,t,n){return"so"===t?n.ordinalNumber(e.getUTCSeconds(),{unit:"second"}):X(e,t)},S:function(e,t){return J(e,t)},X:function(e,t,n,a){var o=(a._originalDate||e).getTimezoneOffset();if(0===o)return"Z";switch(t){case"X":return _(o);case"XXXX":case"XX":return $(o);default:return $(o,":")}},x:function(e,t,n,a){var o=(a._originalDate||e).getTimezoneOffset();switch(t){case"x":return _(o);case"xxxx":case"xx":return $(o);default:return $(o,":")}},O:function(e,t,n,a){var o=(a._originalDate||e).getTimezoneOffset();switch(t){case"O":case"OO":case"OOO":return"GMT"+K(o,":");default:return"GMT"+$(o,":")}},z:function(e,t,n,a){var o=(a._originalDate||e).getTimezoneOffset();switch(t){case"z":case"zz":case"zzz":return"GMT"+K(o,":");default:return"GMT"+$(o,":")}},t:function(e,t,n,a){var o=a._originalDate||e;return Q(Math.floor(o.getTime()/1e3),t.length)},T:function(e,t,n,a){return Q((a._originalDate||e).getTime(),t.length)}};function K(e,t){var n=e>0?"-":"+",a=Math.abs(e),o=Math.floor(a/60),r=a%60;if(0===r)return n+String(o);var i=t||"";return n+String(o)+i+Q(r,2)}function _(e,t){return e%60==0?(e>0?"-":"+")+Q(Math.abs(e)/60,2):$(e,t)}function $(e,t){var n=t||"",a=e>0?"-":"+",o=Math.abs(e);return a+Q(Math.floor(o/60),2)+n+Q(o%60,2)}const ee=V;var te=function(e,t){switch(e){case"P":return t.date({width:"short"});case"PP":return t.date({width:"medium"});case"PPP":return t.date({width:"long"});default:return t.date({width:"full"})}},ne=function(e,t){switch(e){case"p":return t.time({width:"short"});case"pp":return t.time({width:"medium"});case"ppp":return t.time({width:"long"});default:return t.time({width:"full"})}};const ae={p:ne,P:function(e,t){var n,a=e.match(/(P+)(p+)?/)||[],o=a[1],r=a[2];if(!r)return te(e,t);switch(o){case"P":n=t.dateTime({width:"short"});break;case"PP":n=t.dateTime({width:"medium"});break;case"PPP":n=t.dateTime({width:"long"});break;default:n=t.dateTime({width:"full"})}return n.replace("{{date}}",te(o,t)).replace("{{time}}",ne(r,t))}};var oe=["D","DD"],re=["YY","YYYY"];function ie(e,t,n){if("YYYY"===e)throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(t,"`) for formatting years to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("YY"===e)throw new RangeError("Use `yy` instead of `YY` (in `".concat(t,"`) for formatting years to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("D"===e)throw new RangeError("Use `d` instead of `D` (in `".concat(t,"`) for formatting days of the month to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));if("DD"===e)throw new RangeError("Use `dd` instead of `DD` (in `".concat(t,"`) for formatting days of the month to the input `").concat(n,"`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"))}var de={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}};function ce(e){return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.width?String(t.width):e.defaultWidth;return e.formats[n]||e.formats[e.defaultWidth]}}const se={date:ce({formats:{full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},defaultWidth:"full"}),time:ce({formats:{full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},defaultWidth:"full"}),dateTime:ce({formats:{full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},defaultWidth:"full"})};var le={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"};function ue(e){return function(t,n){var a;if("formatting"===(null!=n&&n.context?String(n.context):"standalone")&&e.formattingValues){var o=e.defaultFormattingWidth||e.defaultWidth,r=null!=n&&n.width?String(n.width):o;a=e.formattingValues[r]||e.formattingValues[o]}else{var i=e.defaultWidth,d=null!=n&&n.width?String(n.width):e.defaultWidth;a=e.values[d]||e.values[i]}return a[e.argumentCallback?e.argumentCallback(t):t]}}const pe={ordinalNumber:function(e,t){var n=Number(e),a=n%100;if(a>20||a<10)switch(a%10){case 1:return n+"st";case 2:return n+"nd";case 3:return n+"rd"}return n+"th"},era:ue({values:{narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},defaultWidth:"wide"}),quarter:ue({values:{narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},defaultWidth:"wide",argumentCallback:function(e){return e-1}}),month:ue({values:{narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},defaultWidth:"wide"}),day:ue({values:{narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},defaultWidth:"wide"}),dayPeriod:ue({values:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},defaultWidth:"wide",formattingValues:{narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},defaultFormattingWidth:"wide"})};function me(e){return function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=n.width,o=a&&e.matchPatterns[a]||e.matchPatterns[e.defaultMatchWidth],r=t.match(o);if(!r)return null;var i,d=r[0],c=a&&e.parsePatterns[a]||e.parsePatterns[e.defaultParseWidth],s=Array.isArray(c)?function(e,t){for(var n=0;n<e.length;n++)if(e[n].test(d))return n}(c):function(e,t){for(var n in e)if(e.hasOwnProperty(n)&&e[n].test(d))return n}(c);return i=e.valueCallback?e.valueCallback(s):s,{value:i=n.valueCallback?n.valueCallback(i):i,rest:t.slice(d.length)}}}var Ae,Ce={ordinalNumber:(Ae={matchPattern:/^(\d+)(th|st|nd|rd)?/i,parsePattern:/\d+/i,valueCallback:function(e){return parseInt(e,10)}},function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=e.match(Ae.matchPattern);if(!n)return null;var a=n[0],o=e.match(Ae.parsePattern);if(!o)return null;var r=Ae.valueCallback?Ae.valueCallback(o[0]):o[0];return{value:r=t.valueCallback?t.valueCallback(r):r,rest:e.slice(a.length)}}),era:me({matchPatterns:{narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},defaultMatchWidth:"wide",parsePatterns:{any:[/^b/i,/^(a|c)/i]},defaultParseWidth:"any"}),quarter:me({matchPatterns:{narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},defaultMatchWidth:"wide",parsePatterns:{any:[/1/i,/2/i,/3/i,/4/i]},defaultParseWidth:"any",valueCallback:function(e){return e+1}}),month:me({matchPatterns:{narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},defaultParseWidth:"any"}),day:me({matchPatterns:{narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},defaultMatchWidth:"wide",parsePatterns:{narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},defaultParseWidth:"any"}),dayPeriod:me({matchPatterns:{narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},defaultMatchWidth:"any",parsePatterns:{any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},defaultParseWidth:"any"})};const he={code:"en-US",formatDistance:function(e,t,n){var a,o=de[e];return a="string"==typeof o?o:1===t?o.one:o.other.replace("{{count}}",t.toString()),null!=n&&n.addSuffix?n.comparison&&n.comparison>0?"in "+a:a+" ago":a},formatLong:se,formatRelative:function(e,t,n,a){return le[e]},localize:pe,match:Ce,options:{weekStartsOn:0,firstWeekContainsDate:1}};var fe=/[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g,ge=/P+p+|P+|p+|''|'(''|[^'])+('|$)|./g,be=/^'([^]*?)'?$/,ve=/''/g,xe=/[a-zA-Z]/;function Be(e,t,n){var a,o,r,i,d,c,s,l,u,p,m,A,C,h,f,g,b,v;j(2,arguments);var x=String(t),B=P(),y=null!==(a=null!==(o=null==n?void 0:n.locale)&&void 0!==o?o:B.locale)&&void 0!==a?a:he,w=M(null!==(r=null!==(i=null!==(d=null!==(c=null==n?void 0:n.firstWeekContainsDate)&&void 0!==c?c:null==n||null===(s=n.locale)||void 0===s||null===(l=s.options)||void 0===l?void 0:l.firstWeekContainsDate)&&void 0!==d?d:B.firstWeekContainsDate)&&void 0!==i?i:null===(u=B.locale)||void 0===u||null===(p=u.options)||void 0===p?void 0:p.firstWeekContainsDate)&&void 0!==r?r:1);if(!(w>=1&&w<=7))throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");var k=M(null!==(m=null!==(A=null!==(C=null!==(h=null==n?void 0:n.weekStartsOn)&&void 0!==h?h:null==n||null===(f=n.locale)||void 0===f||null===(g=f.options)||void 0===g?void 0:g.weekStartsOn)&&void 0!==C?C:B.weekStartsOn)&&void 0!==A?A:null===(b=B.locale)||void 0===b||null===(v=b.options)||void 0===v?void 0:v.weekStartsOn)&&void 0!==m?m:0);if(!(k>=0&&k<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");if(!y.localize)throw new RangeError("locale must contain localize property");if(!y.formatLong)throw new RangeError("locale must contain formatLong property");var E=Y(e);if(!function(e){if(j(1,arguments),!function(e){return j(1,arguments),e instanceof Date||"object"===T(e)&&"[object Date]"===Object.prototype.toString.call(e)}(e)&&"number"!=typeof e)return!1;var t=Y(e);return!isNaN(Number(t))}(E))throw new RangeError("Invalid time value");var D=function(e){var t=new Date(Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));return t.setUTCFullYear(e.getFullYear()),e.getTime()-t.getTime()}(E),S=function(e,t){return j(2,arguments),function(e,t){j(2,arguments);var n=Y(e).getTime(),a=M(t);return new Date(n+a)}(e,-M(t))}(E,D),W={firstWeekContainsDate:w,weekStartsOn:k,locale:y,_originalDate:E};return x.match(ge).map((function(e){var t=e[0];return"p"===t||"P"===t?(0,ae[t])(e,y.formatLong):e})).join("").match(fe).map((function(a){if("''"===a)return"'";var o,r,i=a[0];if("'"===i)return(r=(o=a).match(be))?r[1].replace(ve,"'"):o;var d,c=ee[i];if(c)return null!=n&&n.useAdditionalWeekYearTokens||(d=a,-1===re.indexOf(d))||ie(a,t,String(e)),null!=n&&n.useAdditionalDayOfYearTokens||!function(e){return-1!==oe.indexOf(e)}(a)||ie(a,t,String(e)),c(S,a,y.localize,W);if(i.match(xe))throw new RangeError("Format string contains an unescaped latin alphabet character `"+i+"`");return a})).join("")}function ye(e,t){e.removeChild(t)}function we(e,t,n,a,o){e&&function(e,t,n,a,o){var r={title:t,description:n,dueDate:a,priority:o,isDone:!1};e.push(r)}(e,t,n,a,o)}function ke(){var e=document.createElement("div");e.className="modal",e.id="modal";var t=document.createElement("form");t.method="get",t.action="#";var n=document.createElement("div"),a=document.createElement("label");a.textContent="Title:",a.for="title";var o=document.createElement("input");o.type="text",o.required=!0,o.placeholder="title",o.id="title",n.appendChild(a),n.appendChild(o);var r=document.createElement("div"),i=document.createElement("label");i.textContent="Description:",i.for="description";var d=document.createElement("input");d.type="text",d.required=!0,d.id="description",d.placeholder="description",r.appendChild(i),r.appendChild(d);var c=document.createElement("div"),s=document.createElement("label");s.textContent="Date:",s.for="dueDate";var l=document.createElement("input");l.id="date",l.type="date",l.required=!0,l.placeholder="date",c.appendChild(s),c.appendChild(l);var u=document.createElement("div"),p=document.createElement("label");p.textContent="Priority:",p.for="priortiy";var m=document.createElement("select");m.id="priority";var A=document.createElement("option");A.value="low",A.textContent="Low";var C=document.createElement("option");C.value="medium",C.textContent="Medium";var h=document.createElement("option");h.value="high",h.textContent="High",m.id="priority",m.name="priority",m.appendChild(A),m.appendChild(C),m.appendChild(h),u.appendChild(p),u.appendChild(m);var f=document.createElement("div");f.className="buttons-container";var g=document.createElement("button");g.id="submit-task-btn",g.textContent="ADD",g.type="button";var b=document.createElement("button");return b.id="close-modal-btn",b.type="button",b.textContent="CLOSE",b.formNoValidate=!0,f.appendChild(g),f.appendChild(b),e.appendChild(t),t.appendChild(n),t.appendChild(r),t.appendChild(c),t.appendChild(u),t.appendChild(f),e}function Ee(e){for(;e.firstChild;)e.removeChild(e.firstChild)}const je=n.p+"b0d73578e48959457709.png",Te=n.p+"dcf94367e9379947f510.png",De=n.p+"90388c014f4c89881449.png";function Ye(){y(x||b.projects)}function Me(e,t,n,a,o,r,i,d,c,s){!function(e,t,n,a){var o=document.createElement("div");o.className="task",o.id="task".concat(a);var r=document.createElement("div");r.className="task-left-container";var i=document.createElement("div");i.className="priority",i.id="priority".concat(a);var d=document.createElement("div");d.className="check",d.id="check".concat(a);var c=document.createElement("div");c.className="title-container";var s=document.createElement("p");s.textContent=t,s.id="title".concat(a),r.appendChild(i),r.appendChild(d),r.appendChild(c),c.appendChild(s);var l=document.createElement("div");l.className="task-right-container";var u=document.createElement("button");u.id="task-details-btn".concat(a),u.className="task-details-btn",u.textContent="Details";var p=document.createElement("p");p.textContent=n;var m=document.createElement("img");m.src=De,m.className="task-icon",m.alt="edit",m.id="edit-task-btn".concat(a);var A=document.createElement("img");A.src=Te,A.className="task-icon",A.alt="delete",A.id="delete-task-btn".concat(a),l.appendChild(u),l.appendChild(p),l.appendChild(m),l.appendChild(A),o.appendChild(r),o.appendChild(l),e.appendChild(o)}(e,n,t,d);var l=document.getElementById("priority".concat(d));l.style.backgroundColor="low"===r?"green":"medium"===r?"orange":"red";var u=document.getElementById("check".concat(d));u.addEventListener("click",(function(){var e=c,t=document.getElementById("title".concat(d));c.isDone?(t.style.textDecoration="none",u.style.background="white",e.isDone=!1,y(x||b.projects)):(t.style.textDecoration="line-through",u.style.background="black",e.isDone=!0,y(x||b.projects))})),document.getElementById("task-details-btn".concat(d)).addEventListener("click",(function(){document.querySelector("body").appendChild(function(e,t,n,a,o){var r=document.createElement("div");r.className="details-modal",r.id=r.className;var i=document.createElement("div");i.className="details-container",r.appendChild(i);var d=document.createElement("div");d.className="details-section";var c=document.createElement("p");c.className="details-label",c.textContent="Task title:";var s=document.createElement("p");s.textContent=e,d.appendChild(c),d.appendChild(s);var l=document.createElement("div");l.className="details-section";var u=document.createElement("p");u.className="details-label",u.textContent="Task description:";var p=document.createElement("p");p.textContent=t,l.appendChild(u),l.appendChild(p);var m=document.createElement("div");m.className="details-section";var A=document.createElement("p");A.className="details-label",A.textContent="Task date:";var C=document.createElement("p");C.textContent=n,m.appendChild(A),m.appendChild(C);var h=document.createElement("div");h.className="details-section";var f=document.createElement("p");f.className="details-label",f.textContent="Task priority:";var g=document.createElement("p");g.textContent=a,g.id="details-priority-text";var b=document.createElement("span");b.id="details-priority",b.className="details-priority",h.appendChild(f),h.appendChild(g),h.appendChild(b);var v=document.createElement("div");v.className="details-section";var x=document.createElement("p");x.className="details-label",x.textContent="Task finished:";var B=document.createElement("p");B.textContent=o,B.id="status",v.appendChild(x),v.appendChild(B);var y=document.createElement("button");return y.id="close-details-btn",y.textContent="CLOSE",i.appendChild(d),i.appendChild(l),i.appendChild(m),i.appendChild(h),i.appendChild(v),i.appendChild(y),r}(n,a,o,r,i)),document.getElementById("details-priority").style.backgroundColor=l.style.backgroundColor,document.getElementById("status").textContent=c.isDone,document.getElementById("details-priority-text").textContent=r,document.getElementById("close-details-btn").addEventListener("click",(function(){var e=document.getElementById("details-modal");document.querySelector("body").removeChild(e)}))})),document.getElementById("delete-task-btn".concat(d)).addEventListener("click",(function(){var t=document.getElementById("task".concat(d));e.removeChild(t),B(c,s),Ye()})),document.getElementById("edit-task-btn".concat(d)).addEventListener("click",(function(){v.appendChild(ke());var t=document.getElementById("close-modal-btn"),n=document.getElementById("submit-task-btn");t.addEventListener("click",(function(){var e=document.getElementById("modal");ye(v,e)})),n.addEventListener("click",(function(){var t=document.getElementById("title").value,n=document.getElementById("description").value,a=document.getElementById("date").value,o=document.getElementById("priority").value,r={title:t,description:n,dueDate:a,priority:o,isDone:!1},i=s.indexOf(c);s.splice(i,1,r);var l=document.getElementById("task".concat(d)),u=Be(new Date(a),"MMM/do");e.removeChild(l);var p=document.getElementById("modal");ye(v,p),y(x||b.projects),Me(e,u,t,n,a,o,r.isDone,d,r,s)}))}))}function Se(e){e.forEach((function(e){var t=document.getElementById("project".concat(e.id));t.addEventListener("click",(function(){Ee(g),g.appendChild(function(e){var t=document.createElement("div");t.className="task-section-container",t.id=t.className;var n=document.createElement("p");n.textContent=e,n.id="project-name";var a=document.createElement("p");a.textContent="+Add Task",a.id="add-task";var o=document.createElement("div");o.className="tasks",o.id="tasks";var r=document.createElement("button");return r.id="delete-tasks",r.textContent="DELETE COMPLETED TASKS",t.appendChild(n),t.appendChild(a),t.appendChild(o),t.appendChild(r),t}(e.name));var n=document.getElementById("tasks");e.tasks&&e.tasks.forEach((function(t,a){var o=Be(new Date(t.dueDate),"MMM/do");if(Me(n,o,t.title,t.description,t.dueDate,t.priority,t.isDone,a,t,e.tasks),t){var r=document.getElementById("check".concat(a)),i=t,d=document.getElementById("title".concat(a));t.isDone?(d.style.textDecoration="line-through",r.style.background="black",i.isDone=!0):(d.style.textDecoration="none",r.style.background="white",i.isDone=!1)}}));var a=document.getElementById("delete-tasks");a.addEventListener("click",(function(){e.tasks.forEach((function(e,t){if(e.isDone){var a=document.getElementById("task".concat(t));n.removeChild(a)}}))}));var o=0;a.addEventListener("click",(function(){e.tasks.forEach((function(e){e.isDone&&(o+=1)}))})),a.addEventListener("click",(function(){e.tasks.forEach((function(t,n){t.isDone&&(e.tasks.splice(n,o),Ye())}))}));var r=document.getElementById("three-dot".concat(e.id));r&&r.addEventListener("click",(function(){document.getElementById("projects-button-container")||(function(e){var t=document.createElement("div");t.className="projects-button-container",t.id="projects-button-container";var n=document.createElement("button");n.id="project-edit-btn",n.textContent="EDIT";var a=document.createElement("button");a.id="project-delete-btn",a.textContent="DELETE",t.appendChild(n),t.appendChild(a),e.appendChild(t)}(t),document.getElementById("project-delete-btn").addEventListener("click",(function(n){Ee(g),n.stopPropagation(),h.removeChild(t),x?(B(e,x),y(x)):(B(e,b.projects),y(b.projects))})),document.getElementById("project-edit-btn").addEventListener("click",(function(){var n=document.getElementById("projects-button-container");t.removeChild(n),function(e){var t=document.createElement("div");t.className="edit-project-input-container",t.id=t.className;var n=document.createElement("input");n.type="text",n.placeholder="Project Name...",n.id="edit-project-name-input",t.appendChild(n);var a=document.createElement("div");a.className="edit-project-icons-container",a.id="edit-project-icons-container",t.appendChild(a);var o=document.createElement("img");o.src=je,o.alt="check",o.className="edit-project-icon",o.id="check-edit-project-icon";var r=document.createElement("img");r.src=Te,r.alt="cancel",r.className="edit-project-icon",r.id="cancel-edit-project-icon",a.appendChild(o),a.appendChild(r),e.appendChild(t)}(t);var a=document.getElementById("edit-project-input-container");document.getElementById("cancel-edit-project-icon").addEventListener("click",(function(){t.removeChild(a)})),document.getElementById("check-edit-project-icon").addEventListener("click",(function(){var n=document.getElementById("edit-project-name-input").value;if(n){var o=e;o.name=n,x?(w(e,x,o),y(x)):(w(e,b.projects,o),y(b.projects)),document.getElementById("project-name".concat(e.id)).textContent=e.name,t.removeChild(a)}}))})))})),document.getElementById("add-task").addEventListener("click",(function(){v.appendChild(ke());var t=document.getElementById("close-modal-btn"),n=document.getElementById("submit-task-btn");t.addEventListener("click",(function(){var e=document.getElementById("modal");ye(v,e)})),n.addEventListener("click",(function(){var t=document.getElementById("title").value,n=document.getElementById("description").value,a=document.getElementById("date").value,o=document.getElementById("priority").value,r=document.getElementById("status");x?(we(e.tasks,t,n,a,o),Me(document.getElementById("tasks"),Be(new Date(a),"MMM/do"),t,n,a,o,r,e.tasks.indexOf(e.tasks.at(-1)),e.tasks.at(-1),e.tasks),y(x)):(we(e.tasks,t,n,a,o,e.tasks.at(-1),e.tasks),Me(document.getElementById("tasks"),Be(new Date(a),"MMM/do"),t,n,a,o,r,e.tasks.indexOf(e.tasks.at(-1)),e.tasks.at(-1),e.tasks),y(b.projects));var i=document.getElementById("modal");ye(v,i)}))}))}))}))}function We(e,t){e.id=t+1}x&&(x.forEach((function(e){h.appendChild(E(e.name,e.id))})),Se(x)),f.addEventListener("click",(function(){document.getElementById("project-name-input-container")?console.log("input on screen already"):(h.appendChild(function(){var e=document.createElement("div");e.className="project-name-input-container",e.id="project-name-input-container";var t=document.createElement("input");t.placeholder="Project Name...",t.type="text",t.id="project-name-input";var n=document.createElement("div");n.className="input-btns-container";var a=document.createElement("button");a.id="add-project-btn",a.textContent="ADD";var o=document.createElement("button");return o.id="close-project-input-btn",o.textContent="CLOSE",e.appendChild(t),e.appendChild(n),n.appendChild(a),n.appendChild(o),e}()),document.getElementById("add-project-btn").addEventListener("click",(function(){var e,t,n,a=document.getElementById("project-name-input").value;if(a){var o=document.getElementById("project-name-input-container");h.removeChild(o);var r={name:a,id:1,tasks:[]};x&&x.length>0&&We(r,x[x.length-1].id),b.projects.length>0&&!x&&We(r,b.projects[b.projects.length-1].id),h.appendChild(E(r.name,r.id)),b.addProject(r),e=x,t=b.projects,n=r,localStorage.setItem("projects",JSON.stringify(t)),e&&(e.push(n),localStorage.setItem("projects",JSON.stringify(e))),Se(b.projects)}})),document.getElementById("close-project-input-btn").addEventListener("click",(function(){var e=document.getElementById("project-name-input-container");h.removeChild(e)})))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,